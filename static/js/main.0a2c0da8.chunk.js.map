{"version":3,"sources":["WindowText.js","PreviewText.js","App.js","DefaultText.js","index.js"],"names":["WindowText","textValue","textID","textHandler","id","className","style","overflowY","boxSizing","rows","defaultValue","onChange","text","target","value","PreviewText","contentEditable","maxHeight","dangerouslySetInnerHTML","__html","App","useState","textVal","setText","console","log","marked","breaks","ReactDOM","render","document","getElementById"],"mappings":"2RAEe,SAASA,EAAT,GAAyD,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,YACtD,OACE,yBAAKC,GAAG,mBAAmBC,UAAU,wBACnC,yBAAKD,GAAG,cAAcC,UAAU,2BAC9B,uBAAGA,UAAU,yBAAb,kBAEF,yBAAKD,GAAG,gBAAgBC,UAAU,WAChC,8BACED,GAAIF,EACJG,UAAU,0CACVC,MAAO,CACLC,UAAW,SACXC,UAAW,cAEbC,KAAK,KACLC,aAAcT,EACdU,SAAU,SAAAC,GAAI,OAAIT,EAAYS,EAAKC,OAAOC,YChBrC,SAASC,EAAT,GAA6C,IAAtBd,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OAC/C,OACE,yBAAKE,GAAG,mBAAmBC,UAAU,wBACnC,yBAAKD,GAAG,cAAcC,UAAU,2BAC9B,uBAAGA,UAAU,yBAAb,mBAEF,yBAAKD,GAAG,gBAAgBC,UAAU,WAChC,yBACED,GAAIF,EACJc,iBAAiB,EACjBX,UAAU,iBACVC,MAAO,CACLC,UAAW,SACXU,UAAW,QAEbC,wBAAyB,CAAEC,OAAQlB,O,2BCoC9BmB,MA9Cf,WAAgB,IAAD,EACcC,mBCRZ,+qCDOF,mBACNC,EADM,KACGC,EADH,KAQb,OACE,yBAAKlB,UAAU,OACb,yBAAKD,GAAG,iBAAiBC,UAAU,qCACjC,yBAAKD,GAAG,gBAAgBC,UAAU,cAChC,yBACED,GAAG,mBACHC,UAAU,uDAEV,wBACED,GAAG,iBACHC,UAAU,oDAFZ,UAMA,kBAACL,EAAD,CACEC,UAAWqB,EACXpB,OAAO,SACPC,YAtBO,SAAAS,GACjBY,QAAQC,IAAIH,GACZC,EAAQX,OAuBF,yBAAKR,GAAG,oBAAoBC,UAAU,0BACpC,wBACED,GAAG,kBACHC,UAAU,oDAFZ,WAMA,kBAACU,EAAD,CACEd,UAAWyB,IAAOJ,EAAS,CAAEK,QAAQ,IACrCzB,OAAO,iBEpCrB0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0a2c0da8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function WindowText({ textValue, textID, textHandler }) {\r\n  return (\r\n    <div id=\"window-container\" className=\"z-depth-4 white mt-5\">\r\n      <div id=\"window-head\" className=\"warning-color lighten-1\">\r\n        <p className=\"ml-3 pt-1 indigo-text\">Editor Window</p>\r\n      </div>\r\n      <div id=\"window-inside\" className=\"md-form\">\r\n        <textarea\r\n          id={textID}\r\n          className=\"md-textarea form-control text-dark pl-3\"\r\n          style={{\r\n            overflowY: \"scroll\",\r\n            boxSizing: \"border-box\"\r\n          }}\r\n          rows=\"30\"\r\n          defaultValue={textValue}\r\n          onChange={text => textHandler(text.target.value)}\r\n        ></textarea>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PreviewText({ textValue, textID }) {\r\n  return (\r\n    <div id=\"window-container\" className=\"z-depth-4 white mt-5\">\r\n      <div id=\"window-head\" className=\"success-color lighten-1\">\r\n        <p className=\"ml-3 pt-1 indigo-text\">Preview Window</p>\r\n      </div>\r\n      <div id=\"window-inside\" className=\"md-form\">\r\n        <div\r\n          id={textID}\r\n          contentEditable={true}\r\n          className=\"text-dark pl-3\"\r\n          style={{\r\n            overflowY: \"scroll\",\r\n            maxHeight: \"78vh\"\r\n          }}\r\n          dangerouslySetInnerHTML={{ __html: textValue }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport WindowText from \"./WindowText\";\nimport defaultText from \"./DefaultText\";\nimport PreviewText from \"./PreviewText\";\nimport marked from \"marked\";\nimport \"./App.css\";\n\nfunction App() {\n  const [textVal, setText] = useState(defaultText);\n\n  const handleText = text => {\n    console.log(textVal);\n    setText(text);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"page-container\" className=\"container-fluid bg-warning vh-100\">\n        <div id=\"row-container\" className=\"row vh-100\">\n          <div\n            id=\"editor-container\"\n            className=\"col border-right border-dark unique-color lighten-1\"\n          >\n            <h2\n              id=\"editor-heading\"\n              className=\"default-color col p-2 mt-2 z-depth-1 text-center\"\n            >\n              EDITOR\n            </h2>\n            <WindowText\n              textValue={textVal}\n              textID=\"editor\"\n              textHandler={handleText}\n            />\n          </div>\n          <div id=\"preview-container\" className=\"col stylish-color-dark\">\n            <h2\n              id=\"preview-heading\"\n              className=\"primary-color col p-2 mt-2 z-depth-1 text-center\"\n            >\n              PREVIEW\n            </h2>\n            <PreviewText\n              textValue={marked(textVal, { breaks: true })}\n              textID=\"preview\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const defaultText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`;\r\n\r\nexport default defaultText;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}